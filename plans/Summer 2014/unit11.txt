UNIT TITLE: OAuthBackend
// Outputs directly.
LINK TO OUTPUT: ../units/OAuthBackend
LINK TO VIDEOS: ../../videos/OAuthBackend 
LINK TO SLIDES: https://docs.google.com/presentation/d/17xT5oWnnHasgv3vfhVHNR9nIVTi4fOyk83DH7Y1-xKs

OAuthOverview 			9:42
DownloadStartingCode 	7:38	
EndpointsReadyModels 	5:52
APIClass				7:45		
GetWebClientID         	2:01
ListMethods    			21:07
InsertMethods			16:30
DeleteMethods			10:23
DeployAndTest			9:01
SummaryOAuthBackend		1:44
// TOTAL: 92 min

// Lessons here

LESSON TITLE: OAuth Overview
LESSON VIDEO: OAuthOverview/OAuthOverview_player.html
YOUTUBE ID: g_TJZL0bTYc
CONTENT ABOVE
<ul>
<li>In this lesson you will see a demo of this lesson's app, and learn how this app is more complex than ones in previous units.</li>
</ul>
CONTENT BELOW
END


ACTIVITY TITLE: Questions
Q: In what ways do we expect the Grade Recorder API to be more complex than the Movie Quotes API?
TYPE: MS
Grades are numbers, not strings. $#$
It has multiple classes to write CRUD methods for $#$ yes
It uses authentication $#$ yes

Q: How many model classes does the Grade Recorder app use?
TYPE: MC
1 $#$ 
2 $#$ 
3 $#$ Student, Assignment, and GradeEntry $#$ yes
4 $#$ 

Q: Tangent: What web front-end framework does the GradeRecorder web app use?
TYPE: FREE
/bootstrap/i $#$ You got it - guess you know something about web dev too. $#$ Hint: It was developed by Twitter. $#$ bootstrap
END



LESSON TITLE: DownloadStartingCode
LESSON VIDEO: DownloadStartingCode/DownloadStartingCode_player.html
YOUTUBE ID: Im0i3vF7Dh8
CONTENT ABOVE
<ul>
<li>In this lesson, you will register your app ID and download the starting code.</li>
<li>Link to <a href="https://docs.google.com/document/d/12o1Ak3vRXfXS1uWRcvvsMlPkFNvJR9DK9dAmGWf2I5o" target="_blank">instructions doc</a>. </li>
</ul>
CONTENT BELOW
END

ACTIVITY TITLE: Questions
Q: Did you play around with the web client in localhost?
TYPE: MC
Yes $#$ Hope you are enjoying this app. $#$ yes
No $#$ Please do so, at least briefly. It will help you understand the app.
END



LESSON TITLE: Make Endpoints-ready Models
LESSON VIDEO: EndpointsReadyModels/EndpointsReadyModels_player.html
YOUTUBE ID: bscA5ck3cS8
CONTENT ABOVE
<ul>
<li>In this lesson, we'll modify the given model classes to make them ready for Endpoints.</li>
<li>Link to <a href="https://docs.google.com/document/d/12o1Ak3vRXfXS1uWRcvvsMlPkFNvJR9DK9dAmGWf2I5o" target="_blank">instructions doc</a>. </li>
</ul>
CONTENT BELOW
END

ACTIVITY TITLE: Questions
Q: What did we change to make the given models use Endpoints?
TYPE: MS
Make each model class extend EndpointsModel instead of ndb.Model $#$ yes
Add _message_fields_schema to each class to expose the entityKey (for deletion by key) $#$ yes
Add the endpoints library to code and to app.yaml $#$ yes
END



LESSON TITLE: APIClass
LESSON VIDEO: APIClass/APIClass_player.html
YOUTUBE ID: Vsm2Mcq5kXc
CONTENT ABOVE
<ul>
<li>In this lesson, we'll start to write the API, focusing on those things that are required to use OAuth.</li>
<li>At around three minutes into the video we'll add the <b>hostname</b> field to the annotation.</li></ul><div style='text-align: center; font: bold 18px Arial; color: red;'>DO NOT ADD THE HOSTNAME FIELD!</div><ul><li>When the video was made it was fine to add hostname='blah', but now you should not have the hostname field at all (just leave it out).  There have been changes to Endpoints since the video was made.  If you do what the video does then it won't let you do localhost API Explorer testing, which we'll need later!</li>
<li>Link to <a href="https://docs.google.com/document/d/12o1Ak3vRXfXS1uWRcvvsMlPkFNvJR9DK9dAmGWf2I5o" target="_blank">instructions doc</a>. </li>
</ul>
CONTENT BELOW
END

ACTIVITY TITLE: Questions
Q: What new annotations do we need to give values to for the sake of authentication?
TYPE: MS
allowed_client_ids $#$ yes
audiences $#$  $#$ yes
scopes $#$
owner_domain $#$

Q: Do you need to add an allowed client ID for the API Explorer?
TYPE: MC
Yes $#$ By adding the constant, endpoints.API_EXPLORER_CLIENT_ID $#$ yes
No $#$ We don't need to define the constant, but we do need to add an existing constant.
END



LESSON TITLE: GetWebClientID
LESSON VIDEO: GetWebClientID/GetWebClientID_player.html
YOUTUBE ID: 9tcqIosycjA
CONTENT ABOVE
<ul>
<li>In this lesson, you will learn how to generate a client ID for your web app.</li>
<li>Link to <a href="https://docs.google.com/document/d/12o1Ak3vRXfXS1uWRcvvsMlPkFNvJR9DK9dAmGWf2I5o" target="_blank">instructions doc</a>. </li>
</ul>
CONTENT BELOW
END

ACTIVITY TITLE: Questions
Q: Did you get a web client ID?
TYPE: MC
Yes $#$  $#$ yes
No $#$ You will need one if you want to test your deployed web app.
END



LESSON TITLE: ListMethods
LESSON VIDEO: ListMethods/ListMethods_player.html
YOUTUBE ID: WIElgnq8LgU
CONTENT ABOVE
<ul>
<li>In this lesson, you will learn how to change the annotation for a method to require an authenticated user.</li>
<li>You'll also learn how to write an ancestor query (to get all records with the same parent key).</li>
<li>Link to <a href="https://docs.google.com/document/d/12o1Ak3vRXfXS1uWRcvvsMlPkFNvJR9DK9dAmGWf2I5o" target="_blank">instructions doc</a>. </li>
</ul>
CONTENT BELOW
END

ACTIVITY TITLE: Questions
Q: For authenticated methods, you set user_required to what value?
TYPE: MC
\"True\" $#$ That was a bug in my code in the list and insert methods. 
True $#$ $#$ yes
False $#$ 

Q: The get_parent_key(user) helper method belongs to which class?
TYPE: MC
endpoints (google's code) $#$ We gave it to you. Go find it in main.py to convince yourself.
main (the starting code) $#$  $#$ yes
END



LESSON TITLE: InsertMethods
LESSON VIDEO: InsertMethods/InsertMethods_player.html
YOUTUBE ID: LUTva2dinUU
CONTENT ABOVE
<ul>
<li>In this lesson, we'll write the two needed insert methods. </li>
<li>Link to <a href="https://docs.google.com/document/d/12o1Ak3vRXfXS1uWRcvvsMlPkFNvJR9DK9dAmGWf2I5o" target="_blank">instructions doc</a>. </li>
</ul>
CONTENT BELOW
END

ACTIVITY TITLE: Questions
Q: How do we distinguish between an insert and an update in our insert method?
TYPE: MC
Check to see if the item to be inserted is already in the datastore $#$  $#$ yes
Pass in an optional boolean flag to the insert method $#$

Q: Why did we use an ID on a grade entry?
TYPE: MC
So that each student can only have one grade entry $#$ $#$ yes  
Because every object needs an ID $#$

Q: What is the difference between an ID and an entity group?
TYPE: MC
IDs are globally unique, while entityKeys are only unique within an entity group $#$  
Entity keys are globally unique, while IDs are only unique within an entity group $#$ $#$ yes
END



LESSON TITLE: DeleteMethods
LESSON VIDEO: DeleteMethods/DeleteMethods_player.html
YOUTUBE ID: 0PffywYS46I
CONTENT ABOVE
<ul>
<li>In this lesson, we'll write the two needed delete methods</li>
<li>Link to <a href="https://docs.google.com/document/d/12o1Ak3vRXfXS1uWRcvvsMlPkFNvJR9DK9dAmGWf2I5o" target="_blank">instructions doc</a>. </li>
</ul>
CONTENT BELOW
END

ACTIVITY TITLE: Questions
Q: Which is more complicated to delete, an assignment or a grade entry?
TYPE: MC
Assignment $#$ Yes, since you need to query for delete the related grade entries as well. $#$ yes
GradeEntry $#$ 
END



LESSON TITLE: Deploying to App Engine and Test
LESSON VIDEO: DeployAndTest/DeployAndTest_player.html
YOUTUBE ID: 7oR2M0MQYrA
CONTENT ABOVE
<ul>
<li>In this lesson, we'll deploy our app to App Engine and test the API of the live version. This is the last step before working on the client.</li>
<li>Link to <a href="https://docs.google.com/document/d/12o1Ak3vRXfXS1uWRcvvsMlPkFNvJR9DK9dAmGWf2I5o" target="_blank">instructions doc</a>. </li>
</ul>
CONTENT BELOW
END

ACTIVITY TITLE: Questions
Q: Did you deploy and test your app?
TYPE: MC
Yes $#$ Good. $#$ yes
No $#$ You'll want to do so before you write the client, so you can test this part of the system in isolation.
END



LESSON TITLE: Summary and Troubleshooting
LESSON VIDEO: SummaryOAuthBackend/SummaryOAuthBackend_player.html
YOUTUBE ID: tOVXw45Ef40
CONTENT ABOVE
<ul>
<li>There is no lab in this unit. If you want to use OAuth in your project, you are ready!</li>
<li>We'll wait until after we write the Android client to complete the "OAuth" self-evaluation survey.</li>
</ul>
CONTENT BELOW
END
