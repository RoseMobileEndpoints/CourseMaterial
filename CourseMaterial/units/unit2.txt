UNIT TITLE: Intents and Activities
LINK TO OUTPUT: CourseMaterial/units/IntentsAndActivities
// Use first for production, second for testing
//LINK TO VIDEOS: ../../videos/    
LINK TO VIDEOS: ../../../../CourseMaterial/videos/    
LINK TO SLIDES: https://docs.google.com/presentation/d/1JDbkQDuvbg34lXzdRsqH2aMvUekXeY_OPyKbnuGwgeg

1 Intents and Activities Unit. 4 min
2 Lab Layouts (can do any time) 2 min
3 MainMenu. Record. 17
4 New Activities. 18
5 Radio Groups. 8
6 Using Intent Extras 19
  LightsOutActivity part 1: Setup 15
  LightsOutActivity part 2: Views Created in Code 25
8 Landscape layout 3
9 SharedPreferences 11
10 RuntimeResources 7
11 Lab BasketballJersey 3
Total = 132 min


LESSON TITLE: Intents and Activities Unit
LESSON VIDEO: IntentAndActivitiesUnit/IntentAndActivitiesUnit_player.html
CONTENT ABOVE
<ul>
<li>In this lesson, you'll learn about apps that have multiple screens (Activities). You'll also learn about mechanisms for communicating information between activities: Intent extras and Shared Preferences.</li>
<li>You'll also see the app that you will write in this unit: Lights Out with Menu (LOM)</li>
<li>This unit is longer than the previous one (longer lectures and two labs), so please budget your time wisely.</li>
<li>You will also have an exam on basic interactive apps at the end of this unit.</li>
</ul>
CONTENT BELOW
END

ACTIVITY TITLE: Questions
Q: What is the main app you'll code in this unit?
TYPE: MC
HelloButton $#$ That was last time.
LightsOutMenu $#$ $#$ yes
TicTacToe $#$ That was last time.
MovieQuotes $#$ We'll use that one to learn Endpoints later this term.

Q: What are some of the things you'll learn about in this unit?
TYPE: MS
Building apps with multiple screens $#$ yes 
radio buttons $#$ yes
geocoding $#$  
landscape layout $#$ yes
END

LESSON TITLE: Lab: Layouts
LESSON VIDEO: LabLayouts/LabLayouts_player.html
CONTENT ABOVE
<ul>
<li>The lab specification is <a href="https://docs.google.com/document/d/1bcVJLLxZc1rHWWhAJbrivBELdS6ykNixM3GJHv0IL3I">here</a>.</li>
<li>For this mini-lab, please submit to Moodle, the answers to the questions, plus your video demos. In this lab, you will create several mini projects; you don't need to submit the code for these now, but I may ask for them at the end of the course. </li>
</ul>
CONTENT BELOW
END


LESSON TITLE: Main Menu (Review)
LESSON VIDEO: MainMenu/MainMenu_player.html
CONTENT ABOVE
<ul>
<li>In this lesson, you'll review how to make a simple app from scratch.</li>
<li>We'll start it together, and it will pause at about 5:00 for you to try it. The rest of the video is completely optional: it's there in case you get stuck. You might want to watch from 9:30 - 10:30 if you want a short description of how android uses padding in the layout.</li>
</ul>
CONTENT BELOW
END

ACTIVITY TITLE: Questions
Q: How many menu options does the Lights Out Menu app have?
TYPE: MC
1 $#$ Only one option would be boring!
2 $#$ More than that.
3 $#$ More than that.
4 $#$ $#$ yes
5 $#$ Not that many.

Q: What type of layout does the main menu use?
TYPE: MC
RelativeLayout $#$ That would work, but it can be done more simply using another one.
LinearLayout $#$ $#$ yes
FrameLayout $#$ That would be painful since you'd have to position each button and text view using gravity.
AbsoluteLayout $#$ $#$ That type of layout, in which positions are specified in pixels, is deprecated (scheduled to be phased out in a future release).
END

LESSON TITLE: New Activities
LESSON VIDEO: NewActivities/NewActivities_player.html
CONTENT ABOVE
<ul>
<li>In this lesson, you'll learn how to create and launch new activities using Intents.</li>
<li>You'll also learn about the Dialog Theme that you can use for activities.</li>
</ul>
CONTENT BELOW
END

ACTIVITY TITLE: Questions
Q: Which methods are called as part of the Activity lifecycle?
TYPE: MS
onCreate() $#$ yes 
onDestroy() $#$ yes 
onStart() $#$ yes
onStop() $#$ yes
onResume() $#$ yes
onPause() $#$ yes
onDie()

Q: Which is the only thing that the new Activity wizard will NOT do for you?
TYPE: MC
Create a new class that extends Activity $#$ It does this.
Create an intent for the Activity $#$ Plus, you need to call startActivity. It does all the others. $#$ yes
Create a new layout file for the new Activity $#$ It does this, although you still need to modify it.
Register the Activity in the AndroidManifest $#$ It does this.
 
Q: What theme did we use for the About Activity?
TYPE: MC
Holo Light $#$ That was the App Theme.
Theme.Dialog $#$ $#$ yes
Theme.Toast $#$ That is for Toast messages, which you saw in an earlier lab.

Q: How can you test an activity in isolation of the rest of the app? 
TYPE: MC
Move the intent filter with Main and Launcher to that activity. $#$ yes
From that activity's java file, choose ctrl-F11 to run the app. $#$ No, that will still launch whichever activity is set as the main/launcher activity.
Create the activity in the Android Manifest $#$ Creating it isn't enough. You must do something else in the Manifest.

Q: Which is NOT a parameters passed to the Intent constructor?
TYPE: MC
The layout of the activity to be launched $#$ The activity to be launched knows its own layout through setContentView(). $#$ yes
The class of the activity to be launched $#$ This is the second parameter, for example, AboutActivity.class.
The context $#$ This is the first parameter, for example, this. 
END


LESSON TITLE: Radio Buttons 
LESSON VIDEO: RadioButtons/RadioButtons_player.html
CONTENT ABOVE
<ul>
<li>In this lesson, you'll learn how to use a RadioGroup of RadioButtons so that we can change the size of our LightsOut game board.</li>
</ul>
CONTENT BELOW
END

ACTIVITY TITLE: Questions
Q: Why do we need to give the radio group an ID when building the layout? 
TYPE: MC
So that we can detect which button was pressed $#$ To do that, we'd give each radio button an ID.
So that we can put the TextView above it in a RelativeLayout $#$ $#$ yes
It is good practice to put IDs on everything in a layout $#$ That may be the case, but it's not why we *need* it.

Q: What type of listener is used to respond to radio buttons?
TYPE: MC
onRadioClickListener $#$ That's too specific.
onClickListener $#$ Just like any other button $#$ yes
There is no such listener $#$ There is one. Hint: it's the same one as used for any other button.
END


LESSON TITLE: Intent Extras
LESSON VIDEO: IntentExtras/IntentExtras_player.html
CONTENT ABOVE
<ul>
<li>In this lesson, you'll learn how to pass data from one intent to another using <em>extras</em>.</li>
<li>You'll also learn the callback to use when you want the second activity to return data back.</li>
</ul>
CONTENT BELOW
END

ACTIVITY TITLE: Questions
Q: What are Intent extras?
TYPE: MC
Array elements $#$ 
Key-value pairs $#$ $#$ yes

Q: What method do we use to start an activity that we expect will pass back data?
TYPE: MC
startActivityForResult $#$ $#$ yes
startActivityForReturn $#$ 
onActivityResult $#$
onActivityReturn $#$

Q: What method is called when the activity that holds the return data has finished?
TYPE: MC
startActivityForResult $#$
startActivityForReturn $#$ 
onActivityResult $#$ $#$ yes
onActivityReturn $#$

Q: Note that there are two codes: a request code and a result code. 
TYPE: MC
Got it $#$ The calling activity sets the request code to flag which activity it is calling (REQUEST_CODE) and the result code sets the result code to RESULT_OK (if it finishes normally or RESULT_CANCELLED if the back button was pressed. $#$ yes
Huh? $#$ The calling activity sets the request code to flag which activity it is calling (REQUEST_CODE) and the result code sets the result code to RESULT_OK (if it finishes normally or RESULT_CANCELLED if the back button was pressed. 
END


LESSON TITLE: Lights Out Activity Part 1: Setup 
LESSON VIDEO: LightsOutActivitySetup/LightsOutActivitySetup_player.html
CONTENT ABOVE
<ul>
<li>In this lesson, you'll review intents and MVC by setting up the LightsOutActivity.</li>
</ul>
CONTENT BELOW
END

ACTIVITY TITLE: Questions
Q: Which property is valid to use with TableLayouts?
TYPE: MS
StretchColumns $#$ yes
ShrinkColumns $#$ 
END


LESSON TITLE: Lights Out Activity Part 2: Creating Views in Code
LESSON VIDEO: CreatingViewsInCode/CreatingViewsInCode_player.html
CONTENT ABOVE
<ul>
<li>In this lesson, you'll learn how to create views like table rows and buttons in code, so that your Lights Out game can support a variable number of buttons.</li>
</ul>
CONTENT BELOW
END

ACTIVITY TITLE: Questions
Q: What argument must you pass when creating a View?
TYPE: MC
The context $#$ For example, new Button(this), where this is the Activity. $#$ yes
The view's text $#$ You use setText for that.
The size of the view $#$ That's set by the layout parameters. We haven't yet seen how to do that in code.

Q: What did we use to determine which LightsOut button was pressed?
TYPE: MC
ID $#$ Normally you would, but these buttons created in code don't have IDs.
tag $#$ $#$ yes
text $#$ That would work, but isn't as elegant.
END


LESSON TITLE: Landscape Layout
LESSON VIDEO: LandscapeLayout/LandscapeLayout_player.html
CONTENT ABOVE
<ul>
<li>In this lesson, you'll learn how to deal with the effects of a rotated screen by creating a new xml file in the layout-land folder.</li>
</ul>
CONTENT BELOW
END

ACTIVITY TITLE: Questions
Q: If you rotate the screen to landscape, what layout does it use by default?
TYPE: MC
The same one as it used in the default portrait mode $#$ $#$ yes
It magically creates a better layout $#$ Unfortunately, that's not true.

Q: If you decide to create a new layout file for landscape mode, where do you put it?  
TYPE: MC
res/layout $#$ That's where the default layout goes. 
res/layout_land $#$ It does need the hyphen, not an underscore.
res/layout-land $#$ Exactly like this. $#$ yes
END

LESSON TITLE: Shared Preferences
LESSON VIDEO: SharedPreferences/SharedPreferences_player.html
CONTENT ABOVE
<ul>
<li>In this lesson, you’ll learn how to persist (store after the app stops running) simple data. This is needed to store the number of buttons, which would be lost during a screen rotation. We'll review the activity lifecycle and use a very simple solution, SharedPreferences.
</li>
</ul>
CONTENT BELOW
END

ACTIVITY TITLE: Questions
Q: Why is an activity destroyed when the screen rotates?
TYPE: MC
Because the designers of Android purposed to make the system inefficient $#$ You know that's not the case.
Because the layout is loaded in onCreate()  $#$ $#$ yes

Q: What is the first method to be called when an activity is destroyed? 
TYPE: MC
onDestroy() $#$ That is the last one to be called.
onStop() $#$ 
onPause() $#$ $#$ yes
onClick() $#$ That method is for a totally different purpose.

Q: How are SharedPreferences like Intent extras?
TYPE: MS
They each use key-value pairs $#$ yes 
They each use an editor that must be committed for the changes to stick $#$  
They each allow information to be used by multiple activities $#$ yes
END


LESSON TITLE: Localization and Runtime Resources
LESSON VIDEO: LocalizationAndRuntimeResources/LocalizationAndRuntimeResources_player.html
CONTENT ABOVE
<ul>
<li>In this lesson, you'll learn how to make your app use values like Strings depend on the locale (language). </li>
</ul>
CONTENT BELOW
END

ACTIVITY TITLE: Questions
Q: Is it difficult from a programming standpoint to support an additional language in your app?  
TYPE: MC
Yes $#$ It may be tedious, and you would need skill in another language, but you just need a new strings.xml.
No $#$ $#$ It may be tedious, and you would need skill in another language, but you just need a new strings.xml. $#$ yes

Q: Where do you change the language on your phone?
TYPE: MC
Settings > Language and Input > Language $#$ $#$ yes
That's impossible $#$ 
END

LESSON TITLE: Lab: Passing Data in Intents
LESSON VIDEO: LabBasketballJersey/LabBasketballJersey_player.html
CONTENT ABOVE
<ul>
<li>The lab specification is <a href="https://docs.google.com/document/d/1nsif5GdeFADpqMkK2m-E2a3L-ajOM0teIPQfBZKRvDE">here</a>.</li>
<li>When done, be sure to submit your zipped Eclipse project (BasketballJersey), plus video demo, to the Moodle dropbox.</li>
<li>Then go complete the Moodle "Unit 2: Intents and Activities self-evaluation" survey before calling it a day.</li>
</ul>
CONTENT BELOW
END




